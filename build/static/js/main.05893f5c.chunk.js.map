{"version":3,"sources":["components/APIcom.js","components/Person.js","components/Error.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","put","delete","Person","person","deletePerson","style","display","name","number","onClick","Error","message","type","className","App","useState","people","setPeople","filtered","setFiltered","error","setError","useEffect","APIcom","resPeople","window","confirm","res","filter","human","onChange","e","includes","target","value","onFilter","onSubmit","preventDefault","length","found","findIndex","console","log","changedPerson","map","addPerson","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05893f5c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React from 'react';\r\n\r\nconst Person = ({ person, deletePerson }) => {\r\n    return (\r\n        <div>\r\n            <p style={{ display : \"inline-block\" }} key={person.id}>{person.name} {person.number}</p>\r\n            <button style={{ display : \"inline-block\" }} onClick={() => deletePerson(person)}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person\r\n","\r\nconst Error = ({ message, type }) => {\r\n    return (\r\n        <div className={type}>\r\n            <h1 className={type}>{message}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import { useEffect, useState } from 'react';\nimport APIcom from './components/APIcom';\nimport Person from './components/Person';\nimport Error from './components/Error';\nimport './app.css';\n\nfunction App() {\n\n  const [people, setPeople] = useState(null);\n  const [filtered, setFiltered] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    APIcom.getAll()\n    .then(resPeople => {\n      setPeople(resPeople);\n      setFiltered(resPeople);\n    })\n  }, []);\n\n  const onFilter = e => {\n    setFiltered(people.filter(person => \n      person.name.includes(e.target.value)\n      ))\n  }\n\n  const addPerson = e => {\n    e.preventDefault();\n    const newPerson = { \n      name: e.target.name.value, \n      number: e.target.number.value,\n      id: people[people.length - 1].id + 1\n    }\n    \n    const found = people.findIndex(person => person.name === newPerson.name);\n    if (found !== -1){\n      if (window.confirm(`${people[found].name} is already in the phonebook, replace the old number?`)){\n        const changedPerson = {...people[found], number: newPerson.number };\n        APIcom.update(changedPerson.id, changedPerson)\n        .then(response => {\n          console.log(response);\n          setPeople(people.map(person => person.id !== changedPerson.id ? person : response));\n          setFiltered(filtered.map(person => person.id !== changedPerson.id ? person : response));\n          setError({ message: `Updated ${changedPerson.name}`, type: \"approve\" })\n        })\n      } \n      return;\n    }\n\n    APIcom.create(newPerson)\n    .then(res => {\n      console.log(res);\n      setPeople([...people, newPerson]);\n      setFiltered([...people, newPerson]);\n      setError({\n        message: `Added ${newPerson.name}`,\n        type: \"approve\"\n      });\n    });\n  }\n\n  const deletePerson = person => {\n    if (window.confirm(`Delete ${person.name}?`) === false)\n    return;\n  \n    APIcom.remove(person.id)\n    .then(res => {\n      setPeople(people.filter(human => human.id !== person.id));\n      setFiltered(filtered.filter(human => human.id !== person.id));\n      setError({\n        message: `Removed ${person.name}`,\n        type: 'remove'\n      })\n    })\n  }\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      {error === null ? null : <Error message={error.message} type={error.type}></Error>}\n      <p>filter shown with </p>\n      <input type=\"text\" onChange={e => onFilter(e)}></input>\n      <form onSubmit={e => addPerson(e)}>\n        <h2>Add new number</h2>\n        <p>name: </p>\n        <input type=\"text\" name=\"name\"></input>\n        <p>number: </p>\n        <input type=\"text\" name=\"number\"></input>\n        <br />\n        <input type=\"submit\" value=\"Add\"></input>\n      </form>\n      <h2>Numbers</h2>\n      {filtered === null ? <p>Loading...</p> : \n      filtered.map(person => <Person key={person.id} person={person} deletePerson={deletePerson}></Person>)} \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}